name: Continuous Integration
on: push


jobs:
  clang-format:
    runs-on: ubuntu-latest
    container: ghcr.io/khbminus/fasttyping-ci:base
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - run: clang-format-12 -i $(find . -iname '*.cpp' -or -iname '*.c' -or -iname '*.h' -and -not -iname 'doctest.h')
      - run: |
          git add .
          git commit -m "Automatic code format done by clang-format" || echo "Nothing to commit"
          git push || echo "Nothing to push"
  cppcheck:
    runs-on: ubuntu-latest
    container: ghcr.io/khbminus/fasttyping-ci:base
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - run: cppcheck --version
      - run: cppcheck -Iinclude --language=c++ -DSOME_DEFINE_TO_FIX_CONFIG --enable=all --suppress=*:doctest.h --error-exitcode=1 --inline-suppr $(find . -iname '*.cpp')
  server-build:
    runs-on: ubuntu-latest
    container: ghcr.io/khbminus/fasttyping-ci:base
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir build
          cd build
          cmake .. -DBUILD_ALL=OFF -DBUILD_CLIENT=OFF -DBUILD_SERVER=ON
      - run: |
          cd build
          make server
  client-build:
    runs-on: ubuntu-latest
    container: ghcr.io/khbminus/fasttyping-ci:client
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
      - run: |
          mkdir build
          cd build
          cmake .. -DBUILD_ALL=OFF -DBUILD_CLIENT=ON -DBUILD_SERVER=OFF
      - run: |
          cd build
          make client
  deploy-server:
    runs-on: ubuntu-latest
    environment: server-env
    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd fastTyping
            git pull
            git switch feature/ci
            systemctl --user stop ftServer.service
            mkdir build
            cd build
            cmake .. -DBUILD_ALL=OFF -DBUILD_CLIENT=OFF -DBUILD_SERVER=ON
            make server
            echo "built"
            cp server/server ../../server
            cd ..
            rm -rf build
            systemctl --user start ftServer.service
            echo "started"
